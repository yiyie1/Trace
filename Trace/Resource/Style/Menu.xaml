<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<SolidColorBrush x:Key="Font_White" Color="#FFDCDCDC"/>
    <LinearGradientBrush x:Key="MenuHighlight" EndPoint="0.5,1" StartPoint="0.5,0">
        <GradientStop Color="#FF838383" Offset="0"/>
        <GradientStop Color="#FF666666" Offset="1"/>
    </LinearGradientBrush>
    <SolidColorBrush  x:Key="MenuItemHoverTextColor" Color="#FFFF00"/>
    <SolidColorBrush  x:Key="MenuItemTextColor" Color="White"/>
    <SolidColorBrush  x:Key="MenuBG" Color="#464646"/>
    
    <Style x:Key="MLB_MenuItem" TargetType="{x:Type MenuItem}">
		<Setter Property="Foreground" Value="{DynamicResource Font_White}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type MenuItem}">
					<Border x:Name="Border"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}" Background="{x:Null}">
						<Grid Background="#00000000">
							<Grid.ColumnDefinitions>
								<ColumnDefinition x:Name="Col0" Width="8" SharedSizeGroup="MenuItemIconColumnGroup"/>
								<ColumnDefinition Width="Auto" SharedSizeGroup="MenuTextColumnGroup"/>
								<ColumnDefinition Width="8" SharedSizeGroup="MenuItemIGTColumnGroup" />
								<ColumnDefinition x:Name="Col3" Width="0"/>
							</Grid.ColumnDefinitions>

                            <!-- ContentPresenter to show an Icon if needed -->
							<ContentPresenter Grid.Column="0" Margin="4,0,6,0" x:Name="Icon" VerticalAlignment="Center" ContentSource="Icon" Visibility="Collapsed"/>

                            <!-- Glyph is a checkmark if needed for a checkable menu -->
							<Grid Grid.Column="0" Visibility="Collapsed" Margin="4,0,6,0" x:Name="GlyphPanel" VerticalAlignment="Center">
								<Path x:Name="GlyphPanelpath" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,2 L0,4.8 L2.5,7.4 L7.1,2.8 L7.1,0 L2.5,4.6 z" FlowDirection="LeftToRight"/>
							</Grid>

                            <!-- Content for the menu text etc -->
							<ContentPresenter Grid.Column="1"
								Margin="{TemplateBinding Padding}"
								x:Name="HeaderHost"
								RecognizesAccessKey="True"
								ContentSource="Header"/>

                            <!-- Content for the menu IGT -->
							<ContentPresenter Grid.Column="2"
								Margin="1,1,1,1"
								x:Name="IGTHost"
								ContentSource="InputGestureText"
								VerticalAlignment="Center" Visibility="Collapsed"/>

							<Grid Grid.Column="3" Margin="4,0,6,0" x:Name="ArrowPanel" VerticalAlignment="Center" Visibility="Collapsed" >
								<Path x:Name="ArrowPanelPath" HorizontalAlignment="Left" VerticalAlignment="Center" Fill="{TemplateBinding Foreground}" Data="M0,0 L0,8 L4,4 z"/>
							</Grid>

                            <!-- The Popup is the body of the menu which expands down or across depending on the level of the item -->
							<Popup IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}" Placement="Right" x:Name="SubMenuPopup" Focusable="false" PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}" OpacityMask="Black">
								<Border x:Name="SubMenuBorder" BorderThickness="1" Padding="2,2,2,2" Background="#FF323232" BorderBrush="#FF1E1E1E" CornerRadius="0">
									<Grid x:Name="SubMenu" Grid.IsSharedSizeScope="True">
                                        <!-- StackPanel holds children of the menu. This is set by IsItemsHost=True -->
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle"/>
									</Grid>
								</Border>
							</Popup>
						</Grid>
					</Border>

                    <!-- These triggers re-configure the four arrangements of MenuItem to show different levels of menu via Role -->
					<ControlTemplate.Triggers>
                        <!-- Role = TopLevelHeader : this is the root menu item in a menu; the Popup expands down -->
						<Trigger Property="Role" Value="TopLevelHeader">
							<Setter Property="Padding" Value="1,1,1,1"/>
							<Setter Property="Placement" Value="Bottom" TargetName="SubMenuPopup"/>
							<Setter Property="MinWidth" Value="0" TargetName="Col0"/>
							<Setter Property="Width" Value="Auto" TargetName="Col3"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="GlyphPanel"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="IGTHost"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>

                        <!-- Role = TopLevelItem :  this is a child menu item from the top level without any child items-->
						<Trigger Property="Role" Value="TopLevelItem">
							<Setter Property="Padding" Value="1,1,1,1"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>

                        <!-- Role = SubMenuHeader : this is a child menu item which does not have children -->
						<Trigger Property="Role" Value="SubmenuHeader">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
						</Trigger>

                        <!-- Role = SubMenuItem : this is a child menu item which has children-->
						<Trigger Property="Role" Value="SubmenuItem">
							<Setter Property="DockPanel.Dock" Value="Top"/>
							<Setter Property="Padding" Value="0,2,0,2"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="ArrowPanel"/>
						</Trigger>
						<Trigger Property="IsSuspendingPopupAnimation" Value="true">
							<Setter Property="PopupAnimation" Value="None" TargetName="SubMenuPopup"/>
						</Trigger>

                        <!-- If no Icon is present the we collapse the Icon Content -->
						<Trigger Property="Icon" Value="{x:Null}">
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>

                        <!-- The GlyphPanel contains the CheckMark -->
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Visibility" Value="Visible" TargetName="GlyphPanel"/>
							<Setter Property="Visibility" Value="Collapsed" TargetName="Icon"/>
						</Trigger>

                        <!-- Using the system colors for the Menu Highlight and IsEnabled-->
						<Trigger Property="IsHighlighted" Value="true">
							<Setter Property="Background" Value="#FF787878" TargetName="Border"/>
							<Setter Property="Foreground" Value="Black"/>
							<Setter Property="CornerRadius" TargetName="Border" Value="2"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.6"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="{x:Static MenuItem.SeparatorStyleKey}"     
		TargetType="{x:Type Separator}">
		<Setter Property="Margin" Value="2,5" />
		<Setter Property="Height" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<StackPanel>
						<Rectangle Height="{TemplateBinding Height}"         
							Fill="Black" />
						<Rectangle Height="{TemplateBinding Height}"         
							Fill="#FFD6D6D6" />
					</StackPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style TargetType="{x:Type ContextMenu}" >
		<Setter Property="OverridesDefaultStyle"
			Value="True" />
		<Setter Property="SnapsToDevicePixels"
			Value="True" />

		<Setter Property="Background" 
			Value="{StaticResource MenuBG}"/>


		<Setter Property="Padding" 
			Value="2"/>

		<Setter Property="Template">


			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ContextMenu}">

                    <!--Here is where you change the border thickness to zero on the menu-->
					<Border 
						x:Name="Border"
						BorderBrush="#282828"
						BorderThickness="1"
						Background="{StaticResource MenuBG}">


						<StackPanel ClipToBounds="True"
							Orientation="Vertical"
							Margin="0,3"
							IsItemsHost="True" />

					</Border>
					<ControlTemplate.Triggers>


						<Trigger Property="IsMouseOver"
							Value="true">
							<Setter TargetName="Border"
								Property="Background"
								Value="{StaticResource MenuBG}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>


	</Style>
	<SolidColorBrush  x:Key="ContextMenuBorderColor" Color="#FF373737"/>
	<Style TargetType="{x:Type MenuItem}">
		<Setter Property="Background"
			Value="{StaticResource MenuBG}"/>
		<Setter Property="Foreground"
			Value="White"/>
		<Style.Triggers>
			<Trigger Property="IsHighlighted"
				Value="True">
				<Setter Property="Background"
					Value="Black"/>
			</Trigger>
			<Trigger Property="IsEnabled"
				Value="False">
				<Setter Property="Foreground"
					Value="#FF888888"/>
			</Trigger>
		</Style.Triggers>
	</Style>

    <Style TargetType="{x:Type Separator}"
		x:Key="SeparatorStyle">
		<Setter Property="Height"
			Value="1" />
		<Setter Property="Background"
			Value="#0f3c5a" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Separator}">
					<Rectangle Height="{TemplateBinding Height}"
						Fill="White" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<SolidColorBrush  x:Key="MenuItemImageColor" Color="#FF373737"/>
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuHeaderTemplateKey}"
		TargetType="{x:Type MenuItem}">
		<Border x:Name="Border"  CornerRadius="3" Margin="3,0" Height="24" Background="#00626262">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
						SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
						SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>
				<ContentPresenter x:Name="Icon"
					Margin="6,0,6,0"
					VerticalAlignment="Center"
					ContentSource="Icon" />
				<ContentPresenter x:Name="HeaderHost"
					Grid.Column="1"
					VerticalAlignment="Center"
					ContentSource="Header"
					RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText"
                           
					Text="{TemplateBinding InputGestureText}"
					Margin="7,0,7,0"
                          />
				<Path Grid.Column="3"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					Data="M 0 0 L 0 7 L 4 3.5 Z"
					Fill="White" />
				<Popup x:Name="Popup"
					Placement="Right"
					VerticalOffset="-2"
					HorizontalOffset="-1"
					IsOpen="{TemplateBinding IsSubmenuOpen}"
					AllowsTransparency="True"
					Focusable="False"
					PopupAnimation="Fade">
					<Border x:Name="SubmenuBorder" 
						SnapsToDevicePixels="True"
						Background="{StaticResource MenuBG}"
						BorderBrush="#282828"
						BorderThickness="1">
						<StackPanel IsItemsHost="True"
							KeyboardNavigation.DirectionalNavigation="Cycle" />
					</Border>
				</Popup>
			</Grid>
		</Border>

		<ControlTemplate.Triggers>
			<Trigger Property="Icon"
				Value="{x:Null}">
				<Setter TargetName="Icon"
					Property="Visibility"
					Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted"
				Value="true">
				<Setter TargetName="Border"
					Property="Background"
					Value="{StaticResource MenuHighlight}" />
			</Trigger>
			<Trigger SourceName="Popup"
				Property="AllowsTransparency"
				Value="True">
				<Setter TargetName="SubmenuBorder"
					Property="CornerRadius"
					Value="0" />

			</Trigger>
			<Trigger Property="IsEnabled"
				Value="false">
				<Setter Property="Foreground"
					Value="#0f3c5a" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="{x:Static MenuItem.SubmenuItemTemplateKey}"
		TargetType="{x:Type MenuItem}">
		<Border x:Name="Border"  CornerRadius="3" Margin="3,3" Height="24" Background="#00626262" >
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto"
						SharedSizeGroup="Icon" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto"
						SharedSizeGroup="Shortcut" />
					<ColumnDefinition Width="13" />
				</Grid.ColumnDefinitions>
				<Border x:Name="Check"
					Width="13"
					Height="13"
					Visibility="Hidden"
					Margin="6,0,6,0"
					Background="Transparent">
					<Path x:Name="CheckMark" Data="M-1.4171232,9.0843163 L3.6663334,15.167 14.49834,6.5014005 12.674693,4.1482044 4.5826421,10.750714 1.4426865,6.7639355 z" Margin="0" Stretch="Fill" Stroke="Black" StrokeThickness="0" Fill="White"/>
				</Border>
				<ContentPresenter x:Name="HeaderHost"
					Grid.Column="1"
					Margin="5,0,5,0"
					VerticalAlignment="Center"
					ContentSource="Header"
					RecognizesAccessKey="True" />
				<TextBlock x:Name="InputGestureText"
					Grid.Column="2"
					Text="{TemplateBinding InputGestureText}"
					Margin="5,2,5,2"
					DockPanel.Dock="Right" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsChecked" Value="true">
				<Setter Property="Visibility" TargetName="Check" Value="Visible"/>
			</Trigger>
			<Trigger Property="IsChecked" Value="false">
				<Setter Property="Visibility" TargetName="Check" Value="Hidden"/>
			</Trigger>			
			<Trigger Property="IsHighlighted"
				Value="true">
				<Setter TargetName="Border"
					Property="Background"
					Value="{StaticResource MenuHighlight}" />
			</Trigger>
			<Trigger Property="IsEnabled"
				Value="false">
				<Setter Property="Opacity"
					Value="0.6" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<!-- Resource dictionary entries should be defined here. -->
	<Style x:Key="MenuStyle1" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{StaticResource MenuBackground}"/>
		<Setter Property="FontFamily" Value="{DynamicResource {x:Static SystemFonts.MenuFontFamilyKey}}"/>
		<Setter Property="FontSize" Value="{DynamicResource {x:Static SystemFonts.MenuFontSizeKey}}"/>
		<Setter Property="FontStyle" Value="{DynamicResource {x:Static SystemFonts.MenuFontStyleKey}}"/>
		<Setter Property="FontWeight" Value="{DynamicResource {x:Static SystemFonts.MenuFontWeightKey}}"/>
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.MenuTextBrushKey}}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{x:Null}" BorderBrush="{x:Null}" BorderThickness="1" CornerRadius="2" HorizontalAlignment="Left" VerticalAlignment="Top">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>